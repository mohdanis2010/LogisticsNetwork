{"version":3,"file":"static/webpack/static/development/pages/index.js.56727fe0b2de9873bc43.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport GoogleMapReact from \"google-map-react\";\n// import pin from \"./pin.jpeg\";\nimport { Link } from \"react-router-dom\";\nimport ListItems from \"../Components/ListItems\";\nimport \"isomorphic-unfetch\";\n\nimport {\n  container,\n  rightSubContaoner,\n  tableContaoner,\n  btnSubmit,\n} from \"../style\";\n\nconst markerStyle = {\n  position: \"relative\",\n  // top: \"100%\",\n  // left: \"50%\",\n  width: \"100px\",\n  border: \"2px solid red\",\n  // transform: \"translate(-50%, -100%)\",\n};\nimport { postTransaction, getTransaction, getPayload } from \"../store\";\n// import TransactionDetail from \"./transactionDetail\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: false,\n    };\n  }\n\n  static defaultProps = {\n    center: {\n      lat: 1.371778,\n      lng: 103.893059,\n    },\n    zoom: 18,\n  };\n\n  static async getInitialProps({ reduxStore, req }) {\n    return {};\n  }\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = async () => {\n    // const id = \"5d050de87eacc2395cdf86dd\";\n    const res = await fetch(`http://localhost:4000/getTrans`);\n    const data = await res.json();\n    const { getTransaction } = this.props;\n    getTransaction(data);\n  };\n\n  listItemsHandler = async items => {\n    console.log(\"ITEMS CLICKED\", items);\n    const res = await fetch(`http://localhost:4000/findBy/${items}`);\n    const data = await res.json();\n    console.log(\"ITEMS DATA\", data);\n\n    // const { getTransaction } = this.props;\n    // getTransaction(data);\n  };\n\n  getItemDetails = (item, type) => {\n    this.props.getPayload(item, type);\n  };\n\n  handleTransfer = async () => {\n    await fetch(\"http://localhost:4000/addTrans\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(this.props.payload),\n    });\n    this.props.postTransaction();\n    this.loadData();\n  };\n\n  render() {\n    const { transactions, payload } = this.props;\n    console.log(\"transactions\", transactions);\n    //  const dataMap = {\n    //   center: {\n    //     lat: 1.371778,\n    //     lng: 103.893059,\n    //   },\n    //   zoom: 18,\n    // };\n\n    return (\n      <div style={container}>\n        <div style={rightSubContaoner}>\n          {/* <input\n            type=\"button\"\n            value=\"Transfer\"\n            disabled={!payload.amount}\n            style={btnSubmit}\n            onClick={this.loadData}\n          /> */}\n        </div>\n        <div style={tableContaoner}>\n          {/* <TransactionDetail /> */}\n          {/* <ListItems items={transactions} GetIT={this.GETIT} /> */}\n\n          <ul className=\"collection\">\n            {transactions.map(item => (\n              <li\n                key={item}\n                className=\"collection-item\"\n                onClick={() => this.listItemsHandler(item._id)}>\n                {item.driver_id}\n              </li>\n            ))}\n          </ul>\n\n          <div style={{ height: \"100vh\", width: \"100%\" }}>\n            <GoogleMapReact\n              bootstrapURLKeys={{\n                key: \"AIzaSyA16d9FJFh__vK04jU1P64vnEpPc3jenec\",\n              }}\n              defaultCenter={this.props.center}\n              defaultZoom={this.props.zoom}>\n              <div style={markerStyle}>PINq mdbjshdjhdjhsjdhjshdjshdjshj</div>\n            </GoogleMapReact>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  payload: state.payload,\n  transactions: state.transactions,\n});\n\nconst mapDispatchToProps = {\n  getTransaction,\n  postTransaction,\n  getPayload,\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Index);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AAGA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA/BA;AAAA;AAAA;AAAA;AACA;AADA;AAyCA;AACA;AACA;AA3CA;AAAA;AAAA;AAAA;AAAA;AA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AALA;AACA;AAFA;AAQA;AACA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA3CA;AACA;AADA;AAFA;AAKA;AACA;;;AAYA;AACA;AACA;;;AAoCA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;AA3FA;AACA;AACA;;;;;;;;;;;;;;;;;;AAlBA;AACA;AADA;AASA;AACA;AACA;AAFA;AAIA;AALA;AACA;AAqGA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAHA;AAKA;;;;A","sourceRoot":""}